// This is your Prisma schema file for AI Sales Enablement WebApp
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 用戶模型
model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  password_hash String
  first_name    String
  last_name     String
  role          UserRole @default(SALES_REP)
  department    String?
  is_active     Boolean  @default(true)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  last_login    DateTime?

  // 關聯關係
  customers              Customer[]
  callRecords            CallRecord[]
  proposals              Proposal[]
  salesOpportunities     SalesOpportunity[]
  createdKnowledgeBase   KnowledgeBase[] @relation("KnowledgeCreator")
  updatedKnowledgeBase   KnowledgeBase[] @relation("KnowledgeUpdater")

  // Sprint 5: AI提案生成相關關聯
  createdTemplates       ProposalTemplate[] @relation("TemplateCreator")
  updatedTemplates       ProposalTemplate[] @relation("TemplateUpdater")
  proposalGenerations    ProposalGeneration[] @relation("ProposalGenerator")
  createdAIConfigs       AIGenerationConfig[] @relation("AIConfigCreator")
  updatedAIConfigs       AIGenerationConfig[] @relation("AIConfigUpdater")
  userAIConfigs          AIGenerationConfig[] @relation("UserAIConfig")

  // MVP Phase 2 Sprint 1: API網關與安全層關聯
  refreshTokens          RefreshToken[] @relation("UserRefreshTokens")
  apiKeys                ApiKey[] @relation("UserApiKeys")

  @@map("users")
  @@index([email, is_active], name: "IX_User_Email_Active")
  @@index([role, department], name: "IX_User_Role_Department")
}

// 客戶模型
model Customer {
  id                 Int             @id @default(autoincrement())
  company_name       String
  email              String?
  phone              String?
  website            String?
  industry           String?
  company_size       CompanySize?
  status             CustomerStatus  @default(PROSPECT)
  assigned_user_id   Int?
  notes              String?
  created_at         DateTime        @default(now())
  updated_at         DateTime        @updatedAt

  // CRM 整合欄位
  external_id        String?         // 外部系統的 ID (如 Dynamics 365 Account ID)
  external_source    String?         // 外部系統來源 (如 "dynamics365")
  external_created_at DateTime?      // 外部系統的創建時間
  external_updated_at DateTime?      // 外部系統的最後更新時間
  sync_status        SyncStatus?     @default(PENDING) // 同步狀態
  last_sync_at       DateTime?       // 最後同步時間

  // 關聯關係
  assignedUser       User?           @relation(fields: [assigned_user_id], references: [id])
  callRecords        CallRecord[]
  proposals          Proposal[]
  salesOpportunities SalesOpportunity[]
  documents          Document[]
  interactions       Interaction[]
  contacts           CustomerContact[] // 客戶聯絡人
  proposalGenerations ProposalGeneration[]

  @@map("customers")
  // 核心查詢索引（基於第18章架構設計）
  @@index([company_name, email, created_at], name: "IX_Customer_Search")
  @@index([status, assigned_user_id], name: "IX_Customer_Status_User")
  @@index([industry, company_size], name: "IX_Customer_Industry_Size")
  @@index([created_at], name: "IX_Customer_Created")
  // CRM 整合索引
  @@index([external_id, external_source], name: "IX_Customer_External")
  @@index([sync_status, last_sync_at], name: "IX_Customer_Sync")
}

// 通話記錄模型
model CallRecord {
  id           Int           @id @default(autoincrement())
  customer_id  Int
  contact_id   Int?          // 關聯的聯絡人ID
  user_id      Int
  call_date    DateTime
  duration     Int?          // 通話時長（秒）
  outcome      CallOutcome?
  summary      String?
  action_items String?
  recording_url String?
  status       CallStatus   @default(SCHEDULED)
  created_at   DateTime     @default(now())
  updated_at   DateTime     @updatedAt

  // 關聯關係
  customer     Customer     @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  contact      CustomerContact? @relation(fields: [contact_id], references: [id])
  user         User         @relation(fields: [user_id], references: [id])

  @@map("call_records")
  // 效能優化索引（基於第18章設計）
  @@index([customer_id, call_date(sort: Desc)], name: "IX_Call_Customer_Date")
  @@index([customer_id, status, call_date], name: "IX_CallRecord_Complex")
  @@index([user_id, call_date], name: "IX_Call_User_Date")
  @@index([outcome, call_date], name: "IX_Call_Outcome_Date")
}

// 提案模型
model Proposal {
  id           Int            @id @default(autoincrement())
  customer_id  Int
  opportunity_id Int?         // 關聯的銷售機會ID
  user_id      Int
  title        String
  description  String?
  status       ProposalStatus @default(DRAFT)
  total_value  Decimal?       @db.Decimal(15, 2)
  currency     String?        @default("USD")
  version      Int            @default(1)
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
  sent_at      DateTime?
  approved_at  DateTime?

  // 關聯關係
  customer     Customer       @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  opportunity  SalesOpportunity? @relation(fields: [opportunity_id], references: [id])
  user         User           @relation(fields: [user_id], references: [id])
  items        ProposalItem[]
  generations  ProposalGeneration[]

  @@map("proposals")
  // 提案查詢優化索引
  @@index([customer_id, status, created_at(sort: Desc)], name: "IX_Proposal_Status_Date")
  @@index([user_id, status], name: "IX_Proposal_User_Status")
  @@index([total_value, currency], name: "IX_Proposal_Value")
}

// 提案項目模型
model ProposalItem {
  id          Int      @id @default(autoincrement())
  proposal_id Int
  name        String
  description String?
  quantity    Int      @default(1)
  unit_price  Decimal  @db.Decimal(10, 2)
  total_price Decimal  @db.Decimal(15, 2)
  created_at  DateTime @default(now())

  // 關聯關係
  proposal    Proposal @relation(fields: [proposal_id], references: [id], onDelete: Cascade)

  @@map("proposal_items")
  @@index([proposal_id], name: "IX_ProposalItem_Proposal")
}

// 知識庫文檔模型
model KnowledgeBase {
  id            Int                   @id @default(autoincrement())
  title         String
  content       String?               // 純文字內容（用於搜索）
  file_path     String?               // 原始檔案路徑
  file_size     Int?                  // 檔案大小 (bytes)
  mime_type     String?               // MIME類型
  hash          String?               @unique // 內容哈希，用於重複檢測
  version       Int                   @default(1)
  status        DocumentStatus        @default(ACTIVE)
  category      DocumentCategory      @default(GENERAL)
  source        String?               // 來源系統/路徑
  author        String?               // 文檔作者
  language      String?               @default("zh-TW") // 語言代碼
  metadata      Json?                 // 額外元數據
  processing_status ProcessingStatus  @default(PENDING)
  processing_error  String?           // 處理錯誤訊息
  created_at    DateTime              @default(now())
  updated_at    DateTime              @updatedAt
  created_by    Int?                  // 創建者ID
  updated_by    Int?                  // 更新者ID

  // 關聯關係
  creator       User?                 @relation("KnowledgeCreator", fields: [created_by], references: [id])
  updater       User?                 @relation("KnowledgeUpdater", fields: [updated_by], references: [id])
  chunks        KnowledgeChunk[]      // 內容分塊
  tags          KnowledgeTag[]        // 標籤關聯
  processing_tasks ProcessingTask[]   // 處理任務

  @@map("knowledge_base")
  @@index([status, category], name: "IX_KB_Status_Category")
  @@index([processing_status], name: "IX_KB_Processing_Status")
  @@index([created_at], name: "IX_KB_Created")
  @@index([hash], name: "IX_KB_Hash")
  @@index([source, version], name: "IX_KB_Source_Version")
}

// 知識庫內容分塊模型（支援向量搜索）
model KnowledgeChunk {
  id                Int           @id @default(autoincrement())
  knowledge_base_id Int
  chunk_index       Int           // 在文檔中的順序
  content           String        // 分塊內容
  content_hash      String        // 內容哈希
  vector_embedding  String?       // 向量嵌入（JSON格式儲存）
  token_count       Int?          // Token數量
  start_pos         Int?          // 在原文檔中的起始位置
  end_pos           Int?          // 在原文檔中的結束位置
  metadata          Json?         // 分塊元數據
  created_at        DateTime      @default(now())

  // 關聯關係
  knowledge_base    KnowledgeBase @relation(fields: [knowledge_base_id], references: [id], onDelete: Cascade)

  @@map("knowledge_chunks")
  @@unique([knowledge_base_id, chunk_index], name: "UK_Chunk_KB_Index")
  @@index([knowledge_base_id], name: "IX_Chunk_KB")
  @@index([content_hash], name: "IX_Chunk_Hash")
  // 向量相似度搜索索引（需要 pgvector 擴展）
  @@index([vector_embedding], name: "IX_Chunk_Vector", type: Hash)
}

// 知識庫標籤模型
model KnowledgeTag {
  id             Int                   @id @default(autoincrement())
  name           String                @unique
  description    String?
  color          String?               // 標籤顏色
  parent_id      Int?                  // 父標籤ID (支援階層)
  is_system      Boolean               @default(false) // 系統標籤
  usage_count    Int                   @default(0) // 使用次數
  created_at     DateTime              @default(now())
  updated_at     DateTime              @updatedAt

  // 關聯關係
  parent         KnowledgeTag?         @relation("TagHierarchy", fields: [parent_id], references: [id])
  children       KnowledgeTag[]        @relation("TagHierarchy")
  knowledge_base KnowledgeBase[]       // 多對多關聯

  @@map("knowledge_tags")
  @@index([parent_id], name: "IX_Tag_Parent")
  @@index([is_system, usage_count], name: "IX_Tag_System_Usage")
}

// 文檔處理任務模型
model ProcessingTask {
  id                Int              @id @default(autoincrement())
  knowledge_base_id Int?
  task_type         ProcessingType
  status            ProcessingStatus @default(PENDING)
  progress          Float            @default(0) // 0-1 的進度
  total_items       Int?             // 總項目數
  processed_items   Int?             // 已處理項目數
  error_message     String?          // 錯誤訊息
  error_details     Json?            // 詳細錯誤信息
  started_at        DateTime?        // 開始時間
  completed_at      DateTime?        // 完成時間
  metadata          Json?            // 任務元數據
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt

  // 關聯關係
  knowledge_base    KnowledgeBase?   @relation(fields: [knowledge_base_id], references: [id])

  @@map("processing_tasks")
  @@index([status, task_type], name: "IX_Task_Status_Type")
  @@index([knowledge_base_id], name: "IX_Task_KB")
  @@index([created_at], name: "IX_Task_Created")
}

// 文檔模型（保留原有功能，但與KnowledgeBase分開）
model Document {
  id          Int          @id @default(autoincrement())
  customer_id Int?
  title       String
  content     String?
  file_path   String?
  file_size   Int?
  mime_type   String?
  category    DocumentType @default(OTHER)
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt

  // 關聯關係
  customer    Customer?    @relation(fields: [customer_id], references: [id], onDelete: Cascade)

  @@map("documents")
  @@index([customer_id, category], name: "IX_Document_Customer_Category")
  @@index([created_at], name: "IX_Document_Created")
}

// 客戶互動記錄
model Interaction {
  id          Int             @id @default(autoincrement())
  customer_id Int
  contact_id  Int?            // 關聯的聯絡人ID
  type        InteractionType
  description String
  metadata    Json?           // 存儲額外的互動數據
  created_at  DateTime        @default(now())

  // 關聯關係
  customer    Customer        @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  contact     CustomerContact? @relation(fields: [contact_id], references: [id])

  @@map("interactions")
  @@index([customer_id, type, created_at], name: "IX_Interaction_Customer_Type")
}

// AI 分析結果模型
model AIAnalysis {
  id              Int      @id @default(autoincrement())
  entity_type     String   // 'customer', 'call', 'proposal' 等
  entity_id       Int
  analysis_type   String   // 'sentiment', 'priority', 'recommendation' 等
  result          Json     // 分析結果
  confidence      Float?   // 置信度
  created_at      DateTime @default(now())

  @@map("ai_analyses")
  @@index([entity_type, entity_id], name: "IX_AI_Entity")
  @@index([analysis_type, created_at], name: "IX_AI_Type_Date")
}

// 系統配置模型
model SystemConfig {
  id          Int      @id @default(autoincrement())
  key         String   @unique
  value       String
  description String?
  is_active   Boolean  @default(true)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  @@map("system_configs")
  @@index([key, is_active], name: "IX_Config_Key_Active")
}

// 審計日誌模型
model AuditLog {
  id          Int      @id @default(autoincrement())
  user_id     Int?
  entity_type String
  entity_id   Int?
  action      String
  old_values  Json?
  new_values  Json?
  ip_address  String?
  user_agent  String?
  created_at  DateTime @default(now())

  @@map("audit_logs")
  @@index([user_id, created_at], name: "IX_Audit_User_Date")
  @@index([entity_type, entity_id], name: "IX_Audit_Entity")
  @@index([action, created_at], name: "IX_Audit_Action_Date")
}

// 枚舉定義
enum UserRole {
  ADMIN
  SALES_MANAGER
  SALES_REP
  MARKETING
  VIEWER
}

enum CustomerStatus {
  PROSPECT
  QUALIFIED
  OPPORTUNITY
  CUSTOMER
  INACTIVE
}

enum CompanySize {
  STARTUP      // 1-10 employees
  SMALL        // 11-50 employees
  MEDIUM       // 51-200 employees
  LARGE        // 201-1000 employees
  ENTERPRISE   // 1000+ employees
}

enum CallOutcome {
  SUCCESSFUL
  NO_ANSWER
  BUSY
  VOICEMAIL
  CALLBACK_REQUESTED
  NOT_INTERESTED
  FOLLOW_UP_NEEDED
}

enum CallStatus {
  SCHEDULED
  IN_PROGRESS
  COMPLETED
  CANCELLED
  NO_SHOW
}

enum ProposalStatus {
  DRAFT
  SENT
  VIEWED
  UNDER_REVIEW
  APPROVED
  REJECTED
  EXPIRED
}

enum DocumentType {
  CONTRACT
  PROPOSAL
  PRESENTATION
  REPORT
  EMAIL
  NOTE
  OTHER
}

enum InteractionType {
  EMAIL
  PHONE_CALL
  MEETING
  DEMO
  WEBSITE_VISIT
  DOCUMENT_VIEW
  PROPOSAL_VIEW
  OTHER
}

// 知識庫相關枚舉
enum DocumentStatus {
  ACTIVE      // 正常狀態
  INACTIVE    // 已停用
  ARCHIVED    // 已歸檔
  DELETED     // 已刪除
  DRAFT       // 草稿
}

enum DocumentCategory {
  GENERAL          // 一般文檔
  PRODUCT_SPEC     // 產品規格
  SALES_MATERIAL   // 銷售資料
  TECHNICAL_DOC    // 技術文檔
  LEGAL_DOC        // 法律文件
  TRAINING         // 培訓資料
  FAQ              // 常見問題
  CASE_STUDY       // 案例研究
  WHITE_PAPER      // 白皮書
  PRESENTATION     // 簡報
  COMPETITOR       // 競爭對手資料
  INDUSTRY_NEWS    // 行業新聞
  INTERNAL         // 內部文檔
}

enum ProcessingStatus {
  PENDING      // 等待處理
  PROCESSING   // 處理中
  COMPLETED    // 完成
  FAILED       // 失敗
  CANCELLED    // 已取消
  RETRY        // 重試中
}

enum ProcessingType {
  DOCUMENT_PARSE      // 文檔解析
  VECTORIZATION       // 向量化處理
  CONTENT_EXTRACTION  // 內容提取
  METADATA_EXTRACTION // 元數據提取
  DUPLICATE_CHECK     // 重複檢查
  INDEX_UPDATE        // 索引更新
  BATCH_IMPORT        // 批次導入
}

// CRM 同步狀態枚舉
enum SyncStatus {
  PENDING             // 待同步
  IN_PROGRESS         // 同步中
  COMPLETED           // 同步完成
  FAILED              // 同步失敗
  CONFLICT            // 資料衝突
  SKIPPED             // 跳過同步
}

// 客戶聯絡人模型 (對應 Dynamics 365 Contact)
model CustomerContact {
  id                 Int             @id @default(autoincrement())
  customer_id        Int             // 所屬客戶 ID
  first_name         String
  last_name          String
  full_name          String          // 完整姓名 (計算欄位)
  email              String?
  phone              String?
  mobile             String?
  job_title          String?
  department         String?
  is_primary         Boolean         @default(false) // 是否為主要聯絡人
  is_active          Boolean         @default(true)
  notes              String?
  created_at         DateTime        @default(now())
  updated_at         DateTime        @updatedAt

  // CRM 整合欄位
  external_id        String?         // 外部系統的 ID (如 Dynamics 365 Contact ID)
  external_source    String?         // 外部系統來源
  external_created_at DateTime?      // 外部系統的創建時間
  external_updated_at DateTime?      // 外部系統的最後更新時間
  sync_status        SyncStatus?     @default(PENDING)
  last_sync_at       DateTime?

  // 關聯關係
  customer           Customer        @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  callRecords        CallRecord[]
  interactions       Interaction[]
  opportunities      SalesOpportunity[]

  @@map("customer_contacts")
  // 核心查詢索引
  @@index([customer_id, is_primary], name: "IX_Contact_Customer_Primary")
  @@index([email, is_active], name: "IX_Contact_Email_Active")
  @@index([full_name, customer_id], name: "IX_Contact_Name_Customer")
  // CRM 整合索引
  @@index([external_id, external_source], name: "IX_Contact_External")
  @@index([sync_status, last_sync_at], name: "IX_Contact_Sync")
}

// 銷售機會模型 (對應 Dynamics 365 Opportunity)
model SalesOpportunity {
  id                 Int             @id @default(autoincrement())
  customer_id        Int             // 相關客戶 ID
  contact_id         Int?            // 相關聯絡人 ID
  assigned_user_id   Int?            // 負責業務代表
  name               String          // 機會名稱
  description        String?         // 機會描述
  estimated_value    Decimal?        @db.Decimal(15, 2) // 預估價值
  estimated_close_date DateTime?     // 預估結案日期
  close_probability  Float?          // 結案機率 (0-100)
  stage              String?         // 銷售階段
  status             OpportunityStatus @default(OPEN)
  actual_close_date  DateTime?       // 實際結案日期
  actual_value       Decimal?        @db.Decimal(15, 2) // 實際成交金額
  lost_reason        String?         // 失敗原因
  notes              String?
  created_at         DateTime        @default(now())
  updated_at         DateTime        @updatedAt

  // CRM 整合欄位
  external_id        String?         // 外部系統的 ID (如 Dynamics 365 Opportunity ID)
  external_source    String?         // 外部系統來源
  external_created_at DateTime?      // 外部系統的創建時間
  external_updated_at DateTime?      // 外部系統的最後更新時間
  sync_status        SyncStatus?     @default(PENDING)
  last_sync_at       DateTime?

  // 關聯關係
  customer           Customer        @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  contact            CustomerContact? @relation(fields: [contact_id], references: [id])
  assignedUser       User?           @relation(fields: [assigned_user_id], references: [id])
  proposals          Proposal[]

  @@map("sales_opportunities")
  // 核心查詢索引
  @@index([customer_id, status], name: "IX_Opportunity_Customer_Status")
  @@index([assigned_user_id, status], name: "IX_Opportunity_User_Status")
  @@index([estimated_close_date, status], name: "IX_Opportunity_CloseDate_Status")
  @@index([stage, status], name: "IX_Opportunity_Stage_Status")
  // CRM 整合索引
  @@index([external_id, external_source], name: "IX_Opportunity_External")
  @@index([sync_status, last_sync_at], name: "IX_Opportunity_Sync")
}

// 銷售機會狀態枚舉
enum OpportunityStatus {
  OPEN                // 進行中
  WON                 // 已成交
  LOST                // 已失敗
  SUSPENDED           // 暫停
  CANCELLED           // 已取消
}

// ================================================================
// Sprint 5: AI 提案生成相關模型
// ================================================================

// 提案範本模型
// 功能：
// - 儲存可重用的提案範本
// - 支援動態變數和佔位符
// - 範本版本控制和權限管理
// - 範本分類和標籤系統
// 作者：Claude Code
// 創建時間：2025-09-28
model ProposalTemplate {
  id            String            @id @default(cuid())  // 使用CUID更適合分散式系統
  name          String                                  // 範本名稱
  description   String?                                 // 範本描述
  category      TemplateCategory                        // 範本分類
  content       String                                  // 範本內容 (支援Handlebars語法)
  variables     Json                                    // 範本變數定義 {"company_name": {"type": "text", "required": true}}
  version       Int               @default(1)           // 版本號
  is_active     Boolean           @default(true)        // 是否啟用
  is_default    Boolean           @default(false)       // 是否為預設範本
  usage_count   Int               @default(0)           // 使用次數

  // 權限和管理
  created_by    Int                                     // 創建者ID
  updated_by    Int?                                    // 最後更新者ID
  organization  String?                                 // 組織/部門範圍
  access_level  TemplateAccess    @default(PRIVATE)     // 訪問權限

  // 時間戳
  created_at    DateTime          @default(now())
  updated_at    DateTime          @updatedAt

  // 關聯關係
  creator       User              @relation("TemplateCreator", fields: [created_by], references: [id])
  updater       User?             @relation("TemplateUpdater", fields: [updated_by], references: [id])
  generations   ProposalGeneration[]                    // 使用此範本生成的提案

  @@map("proposal_templates")
  @@index([category, is_active], name: "IX_Template_Category_Active")
  @@index([created_by, access_level], name: "IX_Template_Creator_Access")
  @@index([usage_count], name: "IX_Template_Usage")
  @@index([organization, access_level], name: "IX_Template_Org_Access")
}

// 提案生成記錄模型
// 功能：
// - 記錄每次AI提案生成的過程和結果
// - 支援再生成和內容優化
// - 追蹤生成參數和效果
// - 提供生成歷史和版本管理
// 作者：Claude Code
// 創建時間：2025-09-28
model ProposalGeneration {
  id            String            @id @default(cuid())
  template_id   String                                  // 使用的範本ID
  proposal_id   Int?                                    // 關聯的提案ID (可選)
  customer_id   Int?                                    // 目標客戶ID (可選)

  // 生成內容
  title         String                                  // 提案標題
  content       String                                  // 生成的內容
  formatted_content String?                            // 格式化後的內容 (HTML/PDF)

  // 生成參數
  parameters    Json                                    // 生成參數 JSON
  variables     Json                                    // 範本變數值
  ai_model      String            @default("gpt-4")     // 使用的AI模型
  ai_settings   Json?                                   // AI生成設置

  // 生成狀態
  status        GenerationStatus  @default(GENERATING)
  progress      Float             @default(0)           // 生成進度 0-100
  error_message String?                                 // 錯誤信息

  // 品質指標
  quality_score Float?                                  // 內容品質評分 0-100
  relevance_score Float?                                // 相關性評分 0-100
  user_rating   Int?                                    // 用戶評分 1-5
  user_feedback String?                                 // 用戶反饋

  // 效能指標
  generation_time_ms Int?                              // 生成耗時 (毫秒)
  token_usage   Json?                                   // Token使用情況

  // 管理信息
  generated_by  Int                                     // 生成者ID
  regenerated_from String?                             // 重新生成來源ID
  generation_version Int            @default(1)        // 生成版本

  // 時間戳
  created_at    DateTime          @default(now())
  completed_at  DateTime?                              // 完成時間
  updated_at    DateTime          @updatedAt

  // 關聯關係
  template      ProposalTemplate  @relation(fields: [template_id], references: [id])
  proposal      Proposal?         @relation(fields: [proposal_id], references: [id])
  customer      Customer?         @relation(fields: [customer_id], references: [id])
  generator     User              @relation("ProposalGenerator", fields: [generated_by], references: [id])
  parent        ProposalGeneration? @relation("GenerationVersions", fields: [regenerated_from], references: [id])
  children      ProposalGeneration[] @relation("GenerationVersions")

  @@map("proposal_generations")
  @@index([template_id, status], name: "IX_Generation_Template_Status")
  @@index([customer_id, created_at], name: "IX_Generation_Customer_Date")
  @@index([generated_by, status], name: "IX_Generation_User_Status")
  @@index([status, created_at], name: "IX_Generation_Status_Date")
  @@index([quality_score], name: "IX_Generation_Quality")
}

// AI生成設置模型
// 功能：
// - 儲存AI生成的全局和用戶特定設置
// - 管理提示工程模板
// - 配置模型參數和行為
// 作者：Claude Code
// 創建時間：2025-09-28
model AIGenerationConfig {
  id            String            @id @default(cuid())
  name          String                                  // 配置名稱
  description   String?                                 // 配置描述
  config_type   AIConfigType                          // 配置類型

  // AI模型設置
  model_name    String            @default("gpt-4")     // AI模型名稱
  temperature   Float             @default(0.7)         // 創造性參數
  max_tokens    Int               @default(2000)        // 最大Token數
  top_p         Float             @default(1.0)         // 核心採樣參數
  frequency_penalty Float         @default(0.0)         // 頻率懲罰
  presence_penalty Float          @default(0.0)         // 存在懲罰

  // 提示工程
  system_prompt String?                                 // 系統提示
  user_prompt_template String?                         // 用戶提示模板
  prompt_variables Json?                               // 提示變數定義

  // 適用範圍
  user_id       Int?                                    // 用戶特定配置
  organization  String?                                 // 組織範圍
  is_default    Boolean           @default(false)       // 是否為預設配置
  is_active     Boolean           @default(true)        // 是否啟用

  // 管理信息
  created_by    Int                                     // 創建者ID
  updated_by    Int?                                    // 更新者ID
  created_at    DateTime          @default(now())
  updated_at    DateTime          @updatedAt

  // 關聯關係
  creator       User              @relation("AIConfigCreator", fields: [created_by], references: [id])
  updater       User?             @relation("AIConfigUpdater", fields: [updated_by], references: [id])
  user          User?             @relation("UserAIConfig", fields: [user_id], references: [id])

  @@map("ai_generation_configs")
  @@index([config_type, is_active], name: "IX_AIConfig_Type_Active")
  @@index([user_id, is_default], name: "IX_AIConfig_User_Default")
  @@index([organization, is_active], name: "IX_AIConfig_Org_Active")
}

// ================================================================
// 提案生成相關枚舉
// ================================================================

// 範本分類枚舉
enum TemplateCategory {
  SALES_PROPOSAL      // 銷售提案
  PRODUCT_DEMO        // 產品演示
  SERVICE_PROPOSAL    // 服務提案
  PRICING_QUOTE       // 價格報價
  TECHNICAL_PROPOSAL  // 技術提案
  PARTNERSHIP         // 合作提案
  RENEWAL             // 續約提案
  CUSTOM              // 自定義
}

// 範本訪問權限枚舉
enum TemplateAccess {
  PRIVATE             // 私人 (僅創建者)
  TEAM                // 團隊 (同部門)
  ORGANIZATION        // 組織 (全公司)
  PUBLIC              // 公開 (所有用戶)
}

// 生成狀態枚舉
enum GenerationStatus {
  GENERATING          // 生成中
  COMPLETED           // 已完成
  FAILED              // 失敗
  CANCELLED           // 已取消
  PENDING_REVIEW      // 待審核
  APPROVED            // 已批准
}

// AI配置類型枚舉
enum AIConfigType {
  GLOBAL              // 全局配置
  USER                // 用戶配置
  TEMPLATE            // 範本配置
  ORGANIZATION        // 組織配置
}

// ================================================================
// MVP Phase 2 Sprint 1: API網關與安全層
// ================================================================

// Refresh Token 模型 - JWT驗證增強
model RefreshToken {
  id            String    @id @default(uuid())
  user_id       Int
  token_hash    String    @unique  // 使用SHA256哈希儲存，不儲存明文
  device_id     String?              // 設備識別（用於多設備管理）
  ip_address    String?              // 發放IP地址
  user_agent    String?              // 瀏覽器/設備信息
  expires_at    DateTime             // 過期時間（通常30-90天）
  revoked_at    DateTime?            // 撤銷時間
  is_active     Boolean   @default(true)
  created_at    DateTime  @default(now())
  last_used_at  DateTime  @default(now())

  // 關聯關係
  user          User      @relation("UserRefreshTokens", fields: [user_id], references: [id], onDelete: Cascade)

  @@map("refresh_tokens")
  @@index([user_id, is_active], name: "IX_RefreshToken_User_Active")
  @@index([token_hash], name: "IX_RefreshToken_Hash")
  @@index([expires_at, is_active], name: "IX_RefreshToken_Expiry_Active")
}

// Token 黑名單模型 - JWT撤銷機制
model TokenBlacklist {
  id            String    @id @default(uuid())
  token_jti     String    @unique  // JWT ID (jti claim)
  user_id       Int?                 // 用戶ID（可選，用於追蹤）
  reason        String?              // 撤銷原因
  expires_at    DateTime             // Token原本的過期時間
  blacklisted_at DateTime  @default(now())

  @@map("token_blacklist")
  @@index([token_jti], name: "IX_TokenBlacklist_JTI")
  @@index([expires_at], name: "IX_TokenBlacklist_Expiry")
  @@index([user_id], name: "IX_TokenBlacklist_User")
}

// API Key 管理模型 - 企業級API訪問控制
model ApiKey {
  id            String    @id @default(uuid())
  user_id       Int?                 // 關聯用戶（可選，支援系統級API Key）
  key_name      String               // API Key名稱/描述
  key_prefix    String               // Key前綴（顯示用，如 "sk_live_"）
  key_hash      String    @unique    // SHA256哈希後的完整key
  permissions   String[]  @default([]) // 權限列表 JSON數組
  rate_limit    Int       @default(1000) // 速率限制（每小時請求數）
  is_active     Boolean   @default(true)
  expires_at    DateTime?            // 過期時間（可選）
  last_used_at  DateTime?            // 最後使用時間
  last_used_ip  String?              // 最後使用IP
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt

  // 關聯關係
  user          User?     @relation("UserApiKeys", fields: [user_id], references: [id], onDelete: Cascade)

  @@map("api_keys")
  @@index([user_id, is_active], name: "IX_ApiKey_User_Active")
  @@index([key_hash], name: "IX_ApiKey_Hash")
  @@index([key_prefix], name: "IX_ApiKey_Prefix")
  @@index([expires_at, is_active], name: "IX_ApiKey_Expiry_Active")
}